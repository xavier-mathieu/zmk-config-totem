//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESC>;
            key-positions = <20 31>;
            timeout-ms = <100>;
            layers = <0 4>;
        };
    };

    macros {
        entree: entree {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp N6 &kp N5 &kp N2 &kp LS(P) &kp A &kp R &kp D &kp A &kp I &kp L &kp L &kp A &kp N &kp PLUS>;
            label = "ENTREE";
        };

        autre: autre {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N0 &kp LS(M) &kp LS(M) &kp N3 &kp N1 &kp N5 &kp N6 &kp X &kp X &kp N0 &kp N0>;
            label = "AUTRE";
        };

        e_aigue: e_aigue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp E &kp E>;
            label = "E_AIGUE";
        };

        e_grave: e_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp GRAVE &kp E>;
            label = "E_GRAVE";
        };

        a_grave: a_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp GRAVE &kp A>;
            label = "A_GRAVE";
        };

        e_circo: e_circo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp I &kp E>;
            label = "E_CIRCO";
        };

        i_circo: i_circo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp I &kp I>;
            label = "I_CIRCO";
        };

        o_circo: o_circo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp I &kp O>;
            label = "O_CIRCO";
        };

        cedille: cedille {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp C>;
            label = "CEDILLE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
                   &kp Q               &kp W           &kp E           &kp R             &kp T          &kp Y                &kp U                        &kp I                 &kp O            &kp P
                   &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &lt 1 G        &lt 2 H              &mt RIGHT_SHIFT J            &mt RIGHT_GUI K       &mt RIGHT_ALT L  &mt RIGHT_CONTROL SQT
&kp LS(LG(SPACE))  &kp Z               &kp X           &kp C           &kp V             &kp B          &kp N                &kp M                        &mt COLON COMMA       &kp PERIOD       &kp QUESTION           &sk LS(LA(LC(LEFT_GUI)))
                                                       &kp CAPSLOCK    &lt 4 TAB         &lt 3 SPACE    &mt LS(ENTER) ENTER  &mt LA(BACKSPACE) BACKSPACE  &kp LS(LG(NUMBER_4))
            >;
        };

        FN {
            bindings = <
       &none  &none  &none  &none  &none    &none  &kp F7  &kp F8  &kp F9  &kp F12
       &none  &none  &none  &none  &none    &none  &kp F4  &kp F5  &kp F6  &kp F11
&none  &none  &none  &none  &none  &none    &none  &kp F1  &kp F2  &kp F3  &kp F10  &none
                     &none  &none  &none    &none  &none   &none
            >;
        };

        MACROS {
            bindings = <
       &none     &kp C_VOLUME_DOWN  &kp K_MUTE  &kp C_VOL_UP  &none       &none  &none  &none  &none  &none
       &a_grave  &e_grave           &e_aigue    &e_circo      &i_circo    &none  &none  &none  &none  &none
&none  &none     &none              &cedille    &none         &o_circo    &none  &none  &none  &none  &none  &none
                                    &none       &autre        &entree     &none  &none  &none
            >;
        };

        NAV {
            bindings = <
           &kp LEFT_CONTROL  &kp LEFT_ALT   &kp LEFT_GUI    &kp LEFT_SHIFT   &msc SCRL_UP      &none         &kp LS(LG(LEFT))  &kp LS(LG(DOWN))  &kp LS(LG(UP_ARROW))  &kp LS(LG(RIGHT))
           &mmv MOVE_LEFT    &mmv MOVE_UP   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none             &kp LC(LEFT)  &kp LEFT          &kp DOWN          &kp UP                &kp RIGHT
&kp LG(A)  &kp LG(Z)         &kp LS(LG(Z))  &kp LG(C)       &kp LG(V)        &msc SCRL_DOWN    &none         &kp LA(LG(LEFT))  &kp LG(LEFT)      &kp LG(RIGHT)         &kp LA(LG(RIGHT))  &kp LC(RIGHT)
                                            &none           &none            &none             &mkp LCLK     &mkp MCLK         &mkp RCLK
            >;
        };

        NUM_SYM {
            bindings = <
              &kp BACKSLASH  &kp GRAVE     &kp SEMI      &kp LA(NUMBER_3)      &kp DOUBLE_QUOTES    &none         &kp PLUS       &kp MINUS     &kp ASTRK         &kp SLASH
              &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp NUMBER_5         &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9      &kp NUMBER_0
&sk LEFT_GUI  &kp UNDER      &kp TILDE     &kp COLON     &kp LS(LA(NUMBER_2))  &kp SINGLE_QUOTE     &kp COMMA     &kp DOT        &none         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &sk LEFT_SHIFT
                                           &none         &none                 &none                &kp ENTER     &kp BACKSPACE  &kp EQUAL
            >;
        };
    };
};
